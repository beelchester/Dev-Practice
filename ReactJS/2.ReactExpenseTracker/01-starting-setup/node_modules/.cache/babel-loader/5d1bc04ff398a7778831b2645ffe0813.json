{"ast":null,"code":"var _jsxFileName = \"/home/beel/Documents/WebDev/ReactJS/2.ReactExpenseTracker/01-starting-setup/src/components/Expense/ExpenseItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItems.css';\nimport ExpensesFilter from './ExpenseFilter/ExpenseFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseItems(props) {\n  _s();\n\n  //*  the state of the program wont be updated once rendered so to update state we use useState() function from react library\n  // ? below is array destructure syntax from modern js\n  const [title, setTitle] = useState(props.title); // inside useState we write default value(that you want to be updated) \n  // and using array destructure we assign it\n  // the value of title and setTitle is a function (named conventionally) that updates the value of title\n\n  function clickHandler() {\n    setTitle('updated'); //  console.log(title) // this will still show the old value because it gets run before setTitle\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description \",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__price\",\n      children: props.amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ExpenseItems, \"fU9xfXMZ2vKtpMd5J6Xek2RVXNQ=\");\n\n_c = ExpenseItems;\nexport default ExpenseItems; // ! Go to Newexpense now\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItems\");","map":{"version":3,"names":["React","useState","ExpenseDate","Card","ExpensesFilter","ExpenseItems","props","title","setTitle","clickHandler","date","amount"],"sources":["/home/beel/Documents/WebDev/ReactJS/2.ReactExpenseTracker/01-starting-setup/src/components/Expense/ExpenseItems.js"],"sourcesContent":["import React, {useState} from 'react'\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card'\nimport './ExpenseItems.css';\nimport ExpensesFilter from './ExpenseFilter/ExpenseFilter';\n\nfunction ExpenseItems(props) {\n  //*  the state of the program wont be updated once rendered so to update state we use useState() function from react library\n  // ? below is array destructure syntax from modern js\n\n  const [title,setTitle] = useState(props.title); // inside useState we write default value(that you want to be updated) \n  // and using array destructure we assign it\n  // the value of title and setTitle is a function (named conventionally) that updates the value of title\n  function clickHandler(){\n    setTitle('updated')\n    //  console.log(title) // this will still show the old value because it gets run before setTitle\n  }\n\n  return (\n      <Card className='expense-item'>\n        <ExpenseDate date={props.date}/> \n\n        <div className='expense-item__description '>\n          <h2>{title}</h2>\n        </div>\n        <div className='expense-item__price'>{props.amount}</div>\n        <button onClick={clickHandler}>click</button> \n        {/* dont use () after mentioning a function here bcz it will just be pointing not calling it and we \n        dont want it to call as we want to run it only when button is clicked*/}\n      </Card>\n\n  );\n}\n\nexport default ExpenseItems;\n\n// ! Go to Newexpense now"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,oBAAP;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAAA;;EAC3B;EACA;EAEA,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAACK,KAAK,CAACC,KAAP,CAAjC,CAJ2B,CAIqB;EAChD;EACA;;EACA,SAASE,YAAT,GAAuB;IACrBD,QAAQ,CAAC,SAAD,CAAR,CADqB,CAErB;EACD;;EAED,oBACI,QAAC,IAAD;IAAM,SAAS,EAAC,cAAhB;IAAA,wBACE,QAAC,WAAD;MAAa,IAAI,EAAEF,KAAK,CAACI;IAAzB;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAK,SAAS,EAAC,4BAAf;MAAA,uBACE;QAAA,UAAKH;MAAL;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF,eAME;MAAK,SAAS,EAAC,qBAAf;MAAA,UAAsCD,KAAK,CAACK;IAA5C;MAAA;MAAA;MAAA;IAAA,QANF,eAOE;MAAQ,OAAO,EAAEF,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcD;;GA1BQJ,Y;;KAAAA,Y;AA4BT,eAAeA,YAAf,C,CAEA"},"metadata":{},"sourceType":"module"}