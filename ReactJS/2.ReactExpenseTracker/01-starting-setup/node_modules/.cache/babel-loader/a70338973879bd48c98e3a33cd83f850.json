{"ast":null,"code":"var _jsxFileName = \"/home/beel/Documents/WebDev/ReactJS/2.ReactExpenseTracker/01-starting-setup/src/components/Expense/ExpenseData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItems from \"./ExpenseItems\";\nimport \"./ExpenseData.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"../ExpenseFilter/ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseData(props) {\n  _s();\n\n  const [filteredValue, setFilteredValue] = useState(\"\");\n\n  const addFilterHandler = addFilterValue => {\n    setFilteredValue(addFilterValue);\n    console.log(filteredValue);\n  }; // filtering the data\n\n\n  const filteredExpenses = props.items.filter(filterYear => filterYear.date.getFullYear().toString() === filteredValue);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: /*#__PURE__*/_jsxDEV(ExpensesFilter // selected={filteredValue} \n    , {\n      onAddFilter: addFilterHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseData, \"SBg4DRNhrrQDcLLlaYnrRaUEaU8=\");\n\n_c = ExpenseData;\n;\nexport default ExpenseData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseData\");","map":{"version":3,"names":["React","useState","ExpenseItems","Card","ExpensesFilter","ExpenseData","props","filteredValue","setFilteredValue","addFilterHandler","addFilterValue","console","log","filteredExpenses","items","filter","filterYear","date","getFullYear","toString"],"sources":["/home/beel/Documents/WebDev/ReactJS/2.ReactExpenseTracker/01-starting-setup/src/components/Expense/ExpenseData.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ExpenseItems from \"./ExpenseItems\";\nimport \"./ExpenseData.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"../ExpenseFilter/ExpenseFilter\";\nfunction ExpenseData(props) {\n  const [filteredValue, setFilteredValue] = useState(\"\");\n  const addFilterHandler = (addFilterValue) => {\n    setFilteredValue(addFilterValue);\n    console.log(filteredValue)\n  };\n  // filtering the data\n  const filteredExpenses = props.items.filter(filterYear => filterYear.date.getFullYear().toString()  === filteredValue)\n  return(\n\n    <Card className=\"expenses\">\n    <ExpensesFilter\n      // selected={filteredValue} \n\n      onAddFilter={addFilterHandler}\n    />\n      {/* <ExpenseItems\n        title={props.expenses[0].title}\n        amount={props.expenses[0].amount}\n        date={props.expenses[0].date}\n      />\n      <ExpenseItems\n        title={props.expenses[1].title}\n        amount={props.expenses[1].amount}\n        date={props.expenses[1].date}\n      />\n      <ExpenseItems\n        title={props.expenses[2].title}\n        amount={props.expenses[2].amount}\n        date={props.expenses[2].date}\n      />\n      <ExpenseItems\n        title={props.expenses[3].title}\n        amount={props.expenses[3].amount}\n        date={props.expenses[3].date}\n      /> */}\n      {/* The above code is hard code we want it to bw dyamic so we will create an array/object */}\n      {/* {filteredExpenses.map((item )=> <ExpenseItems\n      key = {item.id} //? required so that the all the elements would not get updated for the same result.. only new element at the top should be create\n      title = {item.title}\n      amount = {item.amount}\n      date = {item.date}\n      />)}  */}\n      {/* this will add every element of object expenses to ExpenseItems*/}\n\n      {/* Conditional output */}\n      {/* ?  gives the output of <p> if true \n      : means else condition to output \n      these are js ternary operator*/}\n      {/* {filteredExpenses.length === 0? <p style={{color:\"white\"}} >No expense found</p>\n       :    filteredExpenses.map((item )=> <ExpenseItems\n        key = {item.id} //? required so that the all the elements would not get updated for the same result.. only new element at the top should be create\n        title = {item.title}\n        amount = {item.amount}\n        date = {item.date}\n        />)}  */}\n        {/* this is not easy to read so we wil abuse the js code */}\n        {/* using ? */}\n    </Card>);\n};\nexport default ExpenseData;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,mBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EAAA;;EAC1B,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;;EACA,MAAMQ,gBAAgB,GAAIC,cAAD,IAAoB;IAC3CF,gBAAgB,CAACE,cAAD,CAAhB;IACAC,OAAO,CAACC,GAAR,CAAYL,aAAZ;EACD,CAHD,CAF0B,CAM1B;;;EACA,MAAMM,gBAAgB,GAAGP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,UAAU,IAAIA,UAAU,CAACC,IAAX,CAAgBC,WAAhB,GAA8BC,QAA9B,OAA8CZ,aAA/E,CAAzB;EACA,oBAEE,QAAC,IAAD;IAAM,SAAS,EAAC,UAAhB;IAAA,uBACA,QAAC,cAAD,CACE;IADF;MAGE,WAAW,EAAEE;IAHf;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QAFF;AAmDD;;GA3DQJ,W;;KAAAA,W;AA2DR;AACD,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}